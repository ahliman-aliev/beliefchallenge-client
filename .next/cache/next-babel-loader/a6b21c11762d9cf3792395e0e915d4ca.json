{"ast":null,"code":"import _Reflect$construct from \"@babel/runtime-corejs2/core-js/reflect/construct\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"F:\\\\beliefchallenge\\\\beliefchallenge_client\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = _Reflect$construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false; if (_Reflect$construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(_Reflect$construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react'; // import axios from 'axios'\n// import https from 'https';\n// import API_URL from '../common/config'\n// import apiCall from '../utilfunction/util-api-service'\n// import { Provider } from \"react-redux\";\n// import actions from '../redux/action/categoryAction';\n// const Cookies = require('js-cookie')\n\nimport Home from './home';\nimport 'assets/scss/main.scss';\nimport { connect } from \"react-redux\";\nimport { initStore } from '../redux';\n\nvar Index = /*#__PURE__*/function (_Component) {\n  _inherits(Index, _Component);\n\n  var _super = _createSuper(Index);\n\n  function Index() {\n    _classCallCheck(this, Index);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Index, [{\n    key: \"render\",\n    value: function render() {\n      var loaded = this.props.loaded;\n      return __jsx(React.Fragment, null, __jsx(Home, {\n        postData: this.props.postData,\n        count: this.props.count,\n        fetchPost: this.props.fetchPost,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Index;\n}(Component);\n\nexport default connect(initStore)(Index);","map":{"version":3,"sources":["F:/beliefchallenge/beliefchallenge_client/pages/index.js"],"names":["React","Component","Home","connect","initStore","Index","loaded","props","postData","count","fetchPost"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,uBAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,UAA1B;;IAEMC,K;;;;;;;;;;;;;6BACK;AAAA,UACDC,MADC,GACU,KAAKC,KADf,CACDD,MADC;AAEP,aACE,4BACE,MAAC,IAAD;AAAM,QAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,QAA3B;AAAqC,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWE,KAAvD;AAA8D,QAAA,SAAS,EAAE,KAAKF,KAAL,CAAWG,SAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD;;;;EARiBT,S;;AAapB,eAAeE,OAAO,CAACC,SAAD,CAAP,CAAmBC,KAAnB,CAAf","sourcesContent":["import React, { Component } from 'react'\r\n// import axios from 'axios'\r\n// import https from 'https';\r\n// import API_URL from '../common/config'\r\n// import apiCall from '../utilfunction/util-api-service'\r\n// import { Provider } from \"react-redux\";\r\n// import actions from '../redux/action/categoryAction';\r\n// const Cookies = require('js-cookie')\r\nimport Home from './home'\r\nimport 'assets/scss/main.scss'\r\nimport { connect } from \"react-redux\";\r\nimport { initStore } from '../redux'\r\n\r\nclass Index extends Component {\r\n  render() {\r\n    let { loaded } = this.props\r\n    return (\r\n      <>\r\n        <Home postData={this.props.postData} count={this.props.count} fetchPost={this.props.fetchPost} />\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default connect(initStore)(Index)\r\n"]},"metadata":{},"sourceType":"module"}