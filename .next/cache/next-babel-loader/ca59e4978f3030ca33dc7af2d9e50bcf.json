{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\n// import axios from 'axios';\nimport apiCall from '../../utilfunction/util-api-service';\nimport genericfunctions from 'utilfunction/util-api-service';\nexport const CATEGORY = \"CATEGORY\";\nexport const getCategory = params => dispatch => {\n  return new _Promise((resolve, reject) => {\n    genericfunctions._fetchWithOutParams(params.url).then(res => {\n      if (res.data.response.status) {\n        // console.log(res)\n        dispatch({\n          type: \"CATEGORY\",\n          payload: res.data\n        });\n        resolve(res);\n      } else {\n        resolve(res);\n      }\n    }).catch(err => {// console.log(err);\n      // reject({ message: err });\n    });\n  });\n};","map":{"version":3,"sources":["F:/beliefchallenge/beliefchallenge_client/redux/action/categoryAction.js"],"names":["apiCall","genericfunctions","CATEGORY","getCategory","params","dispatch","resolve","reject","_fetchWithOutParams","url","then","res","data","response","status","type","payload","catch","err"],"mappings":";AAAA;AACA,OAAOA,OAAP,MAAoB,qCAApB;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AAEA,OAAO,MAAMC,QAAQ,GAAG,UAAjB;AAEP,OAAO,MAAMC,WAAW,GAAGC,MAAM,IAAIC,QAAQ,IAAI;AAC7C,SAAO,aAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCN,IAAAA,gBAAgB,CAACO,mBAAjB,CAAqCJ,MAAM,CAACK,GAA5C,EACKC,IADL,CACUC,GAAG,IAAI;AACT,UAAIA,GAAG,CAACC,IAAJ,CAASC,QAAT,CAAkBC,MAAtB,EAA8B;AAC1B;AACAT,QAAAA,QAAQ,CAAC;AAAEU,UAAAA,IAAI,EAAE,UAAR;AAAoBC,UAAAA,OAAO,EAAEL,GAAG,CAACC;AAAjC,SAAD,CAAR;AACAN,QAAAA,OAAO,CAACK,GAAD,CAAP;AACH,OAJD,MAIO;AACHL,QAAAA,OAAO,CAACK,GAAD,CAAP;AACH;AACJ,KATL,EAUKM,KAVL,CAUWC,GAAG,IAAI,CACV;AAEA;AACH,KAdL;AAiBH,GAlBM,CAAP;AAmBH,CApBM","sourcesContent":["// import axios from 'axios';\r\nimport apiCall from '../../utilfunction/util-api-service'\r\nimport genericfunctions from 'utilfunction/util-api-service'\r\n\r\nexport const CATEGORY = \"CATEGORY\"\r\n\r\nexport const getCategory = params => dispatch => {\r\n    return new Promise((resolve, reject) => {\r\n        genericfunctions._fetchWithOutParams(params.url)\r\n            .then(res => {\r\n                if (res.data.response.status) {\r\n                    // console.log(res)\r\n                    dispatch({ type: \"CATEGORY\", payload: res.data })\r\n                    resolve(res);\r\n                } else {\r\n                    resolve(res);\r\n                }\r\n            })\r\n            .catch(err => {\r\n                // console.log(err);\r\n\r\n                // reject({ message: err });\r\n            });\r\n\r\n\r\n    })\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}