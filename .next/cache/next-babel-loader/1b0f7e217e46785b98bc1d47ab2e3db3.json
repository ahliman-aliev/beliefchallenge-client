{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducer from './reducer';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\n\nvar enhancer = composeWithDevTools(applyMiddleware(thunk)); // const persistConfig = {\n//   key: 'root',\n//   storage,\n// };\n// const persistedReducer = persistReducer(persistConfig, reducer);\n\nexport var initStore = function initStore(initialState) {\n  return createStore(reducer, initialState, enhancer);\n}; // export default function configureStore(initialState) {\n//   const store = createStore(persistedReducer, initialState, enhancer);\n//   // we won't need PersistGate since server rendered with nextJS:\n//   // const persistor = persistStore(store);\n//   // return { store, persistor };\n//   return store;\n// }\n// export const initStore = (initialState = {}) => {\n//   return createStore(reducer, initialState, applyMiddleware(thunk));\n// };","map":{"version":3,"sources":["F:/beliefchallenge/beliefchallenge_client/redux/index.js"],"names":["createStore","applyMiddleware","thunk","composeWithDevTools","reducer","persistReducer","storage","enhancer","initStore","initialState"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,OAAP,MAAoB,2BAApB,C,CAAiD;;AAGjD,IAAMC,QAAQ,GAAGJ,mBAAmB,CAClCF,eAAe,CAACC,KAAD,CADmB,CAApC,C,CAIA;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAMM,SAAS,GAAG,SAAZA,SAAY,CAAAC,YAAY;AAAA,SAAIT,WAAW,CAACI,OAAD,EAAUK,YAAV,EAAwBF,QAAxB,CAAf;AAAA,CAA9B,C,CAIP;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport reducer from './reducer';\r\nimport { persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\r\n\r\n\r\nconst enhancer = composeWithDevTools(\r\n  applyMiddleware(thunk),\r\n);\r\n\r\n// const persistConfig = {\r\n//   key: 'root',\r\n//   storage,\r\n// };\r\n// const persistedReducer = persistReducer(persistConfig, reducer);\r\n\r\nexport const initStore = initialState => createStore(reducer, initialState, enhancer);\r\n\r\n\r\n\r\n// export default function configureStore(initialState) {\r\n//   const store = createStore(persistedReducer, initialState, enhancer);\r\n\r\n//   // we won't need PersistGate since server rendered with nextJS:\r\n//   // const persistor = persistStore(store);\r\n//   // return { store, persistor };\r\n\r\n//   return store;\r\n// }\r\n// export const initStore = (initialState = {}) => {\r\n//   return createStore(reducer, initialState, applyMiddleware(thunk));\r\n// };"]},"metadata":{},"sourceType":"module"}