{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"F:\\\\beliefchallenge\\\\beliefchallenge_client\\\\components\\\\socialauthenticationbutton\\\\fblogin.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFacebookF } from \"@fortawesome/free-brands-svg-icons\";\nimport { connect } from 'react-redux';\nimport { login as _login } from 'redux/action/authAction.js';\n\nfunction Fblogin(props) {\n  var _this = this;\n\n  function responseFacebook(response) {\n    loginUser(response);\n  }\n\n  function loginUser(responseData) {\n    if (responseData.name) {\n      var params = {\n        userData: _objectSpread({}, responseData, {\n          profilePic: responseData.picture.data.url,\n          platform: \"facebook\",\n          socialReferenceId: responseData.userID\n        }),\n        url: '/loginSocial',\n        socialLogin: true\n      };\n      props.login(params).then(function (res) {\n        console.log(res);\n\n        if (res.data.response.status) {\n          var _params = {\n            url: '/likepost'\n          };\n          props.getPostLikes(_params);\n        }\n      });\n    }\n  }\n\n  return __jsx(FacebookLogin, {\n    appId: \"437713897174477\",\n    fields: \"name,email,picture\",\n    callback: responseFacebook,\n    render: function render(renderProps) {\n      return __jsx(React.Fragment, null, __jsx(\"button\", {\n        onClick: renderProps.onClick,\n        type: \"button\",\n        className: \"btn btn-light btn-md btn-block text-light\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }\n      }, __jsx(\"p\", {\n        className: \"fb-p\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }\n      }, \" \", __jsx(FontAwesomeIcon, {\n        icon: faFacebookF,\n        className: \"mt-5 mr-2 fb-ico float-left\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 46\n        }\n      }), \"Login with Facebook\")));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  });\n}\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    login: function login(data) {\n      return dispatch(_login(data));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Fblogin);","map":{"version":3,"sources":["F:/beliefchallenge/beliefchallenge_client/components/socialauthenticationbutton/fblogin.js"],"names":["React","FacebookLogin","FontAwesomeIcon","faFacebookF","connect","login","Fblogin","props","responseFacebook","response","loginUser","responseData","name","params","userData","profilePic","picture","data","url","platform","socialReferenceId","userID","socialLogin","then","res","console","log","status","getPostLikes","renderProps","onClick","mapDispatchToProps","dispatch"],"mappings":";;;;;;;;;;;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,uDAA1B;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,WAAT,QAA4B,oCAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAK,IAALA,MAAT,QAAsB,4BAAtB;;AAKA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AAEpB,WAASC,gBAAT,CAA0BC,QAA1B,EAAoC;AAChCC,IAAAA,SAAS,CAACD,QAAD,CAAT;AACH;;AACD,WAASC,SAAT,CAAmBC,YAAnB,EAAiC;AAE7B,QAAIA,YAAY,CAACC,IAAjB,EAAuB;AACnB,UAAIC,MAAM,GAAG;AACTC,QAAAA,QAAQ,oBAAOH,YAAP;AAAqBI,UAAAA,UAAU,EAAEJ,YAAY,CAACK,OAAb,CAAqBC,IAArB,CAA0BC,GAA3D;AAAgEC,UAAAA,QAAQ,EAAE,UAA1E;AAAsFC,UAAAA,iBAAiB,EAAET,YAAY,CAACU;AAAtH,UADC;AAETH,QAAAA,GAAG,EAAE,cAFI;AAGTI,QAAAA,WAAW,EAAE;AAHJ,OAAb;AAKAf,MAAAA,KAAK,CAACF,KAAN,CAAYQ,MAAZ,EAAoBU,IAApB,CAAyB,UAAAC,GAAG,EAAI;AAC5BC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;;AACA,YAAGA,GAAG,CAACP,IAAJ,CAASR,QAAT,CAAkBkB,MAArB,EAA4B;AACxB,cAAId,OAAM,GAAG;AACTK,YAAAA,GAAG,EAAE;AADI,WAAb;AAGAX,UAAAA,KAAK,CAACqB,YAAN,CAAmBf,OAAnB;AACH;AACJ,OARD;AASH;AACJ;;AACD,SACI,MAAC,aAAD;AACI,IAAA,KAAK,EAAC,iBADV;AAEI,IAAA,MAAM,EAAC,oBAFX;AAGI,IAAA,QAAQ,EAAEL,gBAHd;AAII,IAAA,MAAM,EAAE,gBAAAqB,WAAW;AAAA,aACf,4BACI;AAAQ,QAAA,OAAO,EAAEA,WAAW,CAACC,OAA7B;AAAsC,QAAA,IAAI,EAAC,QAA3C;AAAoD,QAAA,SAAS,EAAC,2CAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAG,QAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAqB,MAAC,eAAD;AAAiB,QAAA,IAAI,EAAE3B,WAAvB;AAAoC,QAAA,SAAS,EAAC,6BAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAArB,wBADJ,CADJ,CADe;AAAA,KAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAaH;;AAED,IAAM4B,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACnC,SAAO;AACH3B,IAAAA,KAAK,EAAE,eAAAY,IAAI;AAAA,aAAIe,QAAQ,CAAC3B,MAAK,CAACY,IAAD,CAAN,CAAZ;AAAA;AADR,GAAP;AAGH,CAJD;;AAMA,eAAeb,OAAO,CAAC,IAAD,EAAO2B,kBAAP,CAAP,CAAkCzB,OAAlC,CAAf","sourcesContent":["\r\nimport React from 'react'\r\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faFacebookF } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { connect } from 'react-redux';\r\nimport { login } from 'redux/action/authAction.js'\r\n\r\n\r\n\r\n\r\nfunction Fblogin(props) {\r\n\r\n    function responseFacebook(response) {\r\n        loginUser(response)\r\n    }\r\n    function loginUser(responseData) {\r\n\r\n        if (responseData.name) {\r\n            let params = {\r\n                userData: { ...responseData, profilePic: responseData.picture.data.url, platform: \"facebook\", socialReferenceId: responseData.userID },\r\n                url: '/loginSocial',\r\n                socialLogin: true\r\n            }\r\n            props.login(params).then(res => {\r\n                console.log(res)\r\n                if(res.data.response.status){\r\n                    let params = {\r\n                        url: '/likepost'\r\n                    }\r\n                    props.getPostLikes(params)\r\n                }\r\n            })\r\n        }\r\n    }\r\n    return (\r\n        <FacebookLogin\r\n            appId=\"437713897174477\"\r\n            fields=\"name,email,picture\"\r\n            callback={responseFacebook}\r\n            render={renderProps => (\r\n                <>\r\n                    <button onClick={renderProps.onClick} type=\"button\" className=\"btn btn-light btn-md btn-block text-light\">\r\n                        <p className='fb-p'> <FontAwesomeIcon icon={faFacebookF} className='mt-5 mr-2 fb-ico float-left' />Login with Facebook</p></button>\r\n                </>\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        login: data => dispatch(login(data))\r\n    };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Fblogin);"]},"metadata":{},"sourceType":"module"}