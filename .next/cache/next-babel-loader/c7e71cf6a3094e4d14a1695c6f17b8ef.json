{"ast":null,"code":"var _jsxFileName = \"F:\\\\beliefchallenge\\\\beliefchallenge_client\\\\components\\\\socialauthenticationbutton\\\\googlelogin.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { GoogleLogin } from 'react-google-login';\nimport genericfunctions from 'utilfunction/util-api-service';\nimport { login } from 'redux/action/authAction.js';\nimport { connect } from 'react-redux';\nimport { getPostLikes } from 'redux/action/generalAction';\n\nfunction Googlelogin(props) {\n  function responseGoogle(response) {\n    // console.log(response);\n    if (response && response.profileObj) {\n      let responseData = {\n        accessToken: response.accessToken,\n        name: response.profileObj.givenName,\n        email: response.profileObj.email,\n        profilePic: response.profileObj.imageUrl,\n        platform: \"google\",\n        socialReferenceId: response.profileObj.googleId\n      };\n      loginUser(responseData);\n    }\n  }\n\n  function loginUser(responseData_) {\n    let params = {\n      userData: responseData_,\n      url: '/loginSocial',\n      socialLogin: true\n    };\n    props.login(params).then(res => {\n      console.log(res);\n\n      if (res.data.response.status) {\n        let params = {\n          url: '/likepost'\n        };\n        props.getPostLikes(params);\n      }\n    });\n  }\n\n  return __jsx(GoogleLogin, {\n    clientId: \"328528170244-j0lgkl2o8eiqp28bm9r9gm396lhk18mu.apps.googleusercontent.com\",\n    cookiePolicy: 'single_host_origin',\n    render: renderProps => __jsx(React.Fragment, null, __jsx(\"button\", {\n      onClick: renderProps.onClick,\n      type: \"button\",\n      className: \"btn btn-light btn-md btn-block text-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }, __jsx(\"p\", {\n      className: \"fb-p\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }\n    }, \" \", __jsx(\"img\", {\n      className: \"mr-2\",\n      src: \"https://img.icons8.com/color/48/000000/google-logo.png\",\n      height: \"18px\",\n      width: \"18px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 46\n      }\n    }), \"Login with Google\"))),\n    onSuccess: responseGoogle,\n    onFailure: responseGoogle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  });\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    login: data => dispatch(login(data)),\n    getPostLikes: data => dispatch(getPostLikes(data))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Googlelogin);","map":{"version":3,"sources":["F:/beliefchallenge/beliefchallenge_client/components/socialauthenticationbutton/googlelogin.js"],"names":["React","GoogleLogin","genericfunctions","login","connect","getPostLikes","Googlelogin","props","responseGoogle","response","profileObj","responseData","accessToken","name","givenName","email","profilePic","imageUrl","platform","socialReferenceId","googleId","loginUser","responseData_","params","userData","url","socialLogin","then","res","console","log","data","status","renderProps","onClick","mapDispatchToProps","dispatch"],"mappings":";;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AACA,SAASC,KAAT,QAAsB,4BAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,4BAA7B;;AAKA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAExB,WAASC,cAAT,CAAwBC,QAAxB,EAAkC;AAC9B;AAEA,QAAIA,QAAQ,IAAIA,QAAQ,CAACC,UAAzB,EAAqC;AACjC,UAAIC,YAAY,GAAG;AACfC,QAAAA,WAAW,EAAEH,QAAQ,CAACG,WADP;AAEfC,QAAAA,IAAI,EAAEJ,QAAQ,CAACC,UAAT,CAAoBI,SAFX;AAGfC,QAAAA,KAAK,EAAEN,QAAQ,CAACC,UAAT,CAAoBK,KAHZ;AAIfC,QAAAA,UAAU,EAAEP,QAAQ,CAACC,UAAT,CAAoBO,QAJjB;AAKfC,QAAAA,QAAQ,EAAE,QALK;AAMfC,QAAAA,iBAAiB,EAAEV,QAAQ,CAACC,UAAT,CAAoBU;AANxB,OAAnB;AAQAC,MAAAA,SAAS,CAACV,YAAD,CAAT;AACH;AAEJ;;AACD,WAASU,SAAT,CAAmBC,aAAnB,EAAkC;AAC9B,QAAIC,MAAM,GAAG;AACTC,MAAAA,QAAQ,EAAEF,aADD;AAETG,MAAAA,GAAG,EAAE,cAFI;AAGTC,MAAAA,WAAW,EAAE;AAHJ,KAAb;AAKAnB,IAAAA,KAAK,CAACJ,KAAN,CAAYoB,MAAZ,EAAoBI,IAApB,CAAyBC,GAAG,IAAI;AAC5BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;;AACA,UAAGA,GAAG,CAACG,IAAJ,CAAStB,QAAT,CAAkBuB,MAArB,EAA4B;AACxB,YAAIT,MAAM,GAAG;AACTE,UAAAA,GAAG,EAAE;AADI,SAAb;AAGAlB,QAAAA,KAAK,CAACF,YAAN,CAAmBkB,MAAnB;AACH;AACJ,KARD;AASH;;AAED,SACI,MAAC,WAAD;AAEI,IAAA,QAAQ,EAAC,0EAFb;AAGI,IAAA,YAAY,EAAE,oBAHlB;AAII,IAAA,MAAM,EAAEU,WAAW,IACf,4BACI;AAAQ,MAAA,OAAO,EAAEA,WAAW,CAACC,OAA7B;AAAsC,MAAA,IAAI,EAAC,QAA3C;AAAoD,MAAA,SAAS,EAAC,2CAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAqB;AAAK,MAAA,SAAS,EAAC,MAAf;AAAsB,MAAA,GAAG,EAAC,wDAA1B;AAAmF,MAAA,MAAM,EAAC,MAA1F;AAAiG,MAAA,KAAK,EAAC,MAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAArB,sBADJ,CADJ,CALR;AAUI,IAAA,SAAS,EAAE1B,cAVf;AAWI,IAAA,SAAS,EAAEA,cAXf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAeH;;AACD,MAAM2B,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHjC,IAAAA,KAAK,EAAE4B,IAAI,IAAIK,QAAQ,CAACjC,KAAK,CAAC4B,IAAD,CAAN,CADpB;AAEH1B,IAAAA,YAAY,EAAE0B,IAAI,IAAIK,QAAQ,CAAC/B,YAAY,CAAC0B,IAAD,CAAb;AAF3B,GAAP;AAKH,CAND;;AAQA,eAAe3B,OAAO,CAAC,IAAD,EAAO+B,kBAAP,CAAP,CAAkC7B,WAAlC,CAAf","sourcesContent":["\r\nimport React from 'react'\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport genericfunctions from 'utilfunction/util-api-service'\r\nimport { login } from 'redux/action/authAction.js'\r\nimport { connect } from 'react-redux';\r\nimport { getPostLikes } from 'redux/action/generalAction'\r\n\r\n\r\n\r\n\r\nfunction Googlelogin(props) {\r\n\r\n    function responseGoogle(response) {\r\n        // console.log(response);\r\n\r\n        if (response && response.profileObj) {\r\n            let responseData = {\r\n                accessToken: response.accessToken,\r\n                name: response.profileObj.givenName,\r\n                email: response.profileObj.email,\r\n                profilePic: response.profileObj.imageUrl,\r\n                platform: \"google\",\r\n                socialReferenceId: response.profileObj.googleId\r\n            }\r\n            loginUser(responseData)\r\n        }\r\n\r\n    }\r\n    function loginUser(responseData_) {\r\n        let params = {\r\n            userData: responseData_,\r\n            url: '/loginSocial',\r\n            socialLogin: true\r\n        }\r\n        props.login(params).then(res => {\r\n            console.log(res)\r\n            if(res.data.response.status){\r\n                let params = {\r\n                    url: '/likepost'\r\n                }\r\n                props.getPostLikes(params)\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <GoogleLogin\r\n\r\n            clientId=\"328528170244-j0lgkl2o8eiqp28bm9r9gm396lhk18mu.apps.googleusercontent.com\"\r\n            cookiePolicy={'single_host_origin'}\r\n            render={renderProps => (\r\n                <>\r\n                    <button onClick={renderProps.onClick} type=\"button\" className=\"btn btn-light btn-md btn-block text-light\">\r\n                        <p className='fb-p'> <img className='mr-2' src=\"https://img.icons8.com/color/48/000000/google-logo.png\" height='18px' width='18px' />Login with Google</p></button>\r\n                </>\r\n            )}\r\n            onSuccess={responseGoogle}\r\n            onFailure={responseGoogle}\r\n        />\r\n    )\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        login: data => dispatch(login(data)),\r\n        getPostLikes: data => dispatch(getPostLikes(data))\r\n\r\n    };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Googlelogin);"]},"metadata":{},"sourceType":"module"}