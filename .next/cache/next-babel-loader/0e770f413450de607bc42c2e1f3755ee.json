{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\n// import axios from 'axios';\nimport apiCall from '../../utilfunction/util-api-service';\nimport genericfunctions from 'utilfunction/util-api-service';\nexport var CATEGORY = \"CATEGORY\";\nexport var getCategory = function getCategory(params) {\n  return function (dispatch) {\n    return new _Promise(function (resolve, reject) {\n      genericfunctions._fetchWithOutParams(params.url).then(function (res) {\n        if (res.data.response.status) {\n          // console.log(res)\n          dispatch({\n            type: \"CATEGORY\",\n            payload: res.data\n          });\n          resolve(res);\n        } else {\n          resolve(res);\n        }\n      })[\"catch\"](function (err) {// console.log(err);\n        // reject({ message: err });\n      });\n    });\n  };\n};","map":{"version":3,"sources":["F:/beliefchallenge/beliefchallenge_client/redux/action/categoryAction.js"],"names":["apiCall","genericfunctions","CATEGORY","getCategory","params","dispatch","resolve","reject","_fetchWithOutParams","url","then","res","data","response","status","type","payload","err"],"mappings":";AAAA;AACA,OAAOA,OAAP,MAAoB,qCAApB;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AAEA,OAAO,IAAMC,QAAQ,GAAG,UAAjB;AAEP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,MAAM;AAAA,SAAI,UAAAC,QAAQ,EAAI;AAC7C,WAAO,aAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCN,MAAAA,gBAAgB,CAACO,mBAAjB,CAAqCJ,MAAM,CAACK,GAA5C,EACKC,IADL,CACU,UAAAC,GAAG,EAAI;AACT,YAAIA,GAAG,CAACC,IAAJ,CAASC,QAAT,CAAkBC,MAAtB,EAA8B;AAC1B;AACAT,UAAAA,QAAQ,CAAC;AAAEU,YAAAA,IAAI,EAAE,UAAR;AAAoBC,YAAAA,OAAO,EAAEL,GAAG,CAACC;AAAjC,WAAD,CAAR;AACAN,UAAAA,OAAO,CAACK,GAAD,CAAP;AACH,SAJD,MAIO;AACHL,UAAAA,OAAO,CAACK,GAAD,CAAP;AACH;AACJ,OATL,WAUW,UAAAM,GAAG,EAAI,CACV;AAEA;AACH,OAdL;AAiBH,KAlBM,CAAP;AAmBH,GApBgC;AAAA,CAA1B","sourcesContent":["// import axios from 'axios';\r\nimport apiCall from '../../utilfunction/util-api-service'\r\nimport genericfunctions from 'utilfunction/util-api-service'\r\n\r\nexport const CATEGORY = \"CATEGORY\"\r\n\r\nexport const getCategory = params => dispatch => {\r\n    return new Promise((resolve, reject) => {\r\n        genericfunctions._fetchWithOutParams(params.url)\r\n            .then(res => {\r\n                if (res.data.response.status) {\r\n                    // console.log(res)\r\n                    dispatch({ type: \"CATEGORY\", payload: res.data })\r\n                    resolve(res);\r\n                } else {\r\n                    resolve(res);\r\n                }\r\n            })\r\n            .catch(err => {\r\n                // console.log(err);\r\n\r\n                // reject({ message: err });\r\n            });\r\n\r\n\r\n    })\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}