{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"F:\\\\beliefchallenge\\\\beliefchallenge_client\\\\components\\\\login\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Link from 'next/link';\nimport FBbutton from 'components/socialauthenticationbutton/fblogin';\nimport GoogleLogin from 'components/socialauthenticationbutton/googlelogin';\nimport { connect } from 'react-redux';\nimport { login } from 'redux/action/authAction.js';\nimport Router, { withRouter } from 'next/router';\nimport { errorHandle } from 'common/error-message';\nimport Loader from 'components/loading';\nimport Logo from 'components/common/Logo';\nimport { getPostLikes } from 'redux/action/generalAction';\n/**\r\n * created by zain ahmed \r\n * created date: 24/12/2019\r\n * login class component\r\n */\n\nclass LoginCom extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"userLogin\", () => {\n      let {\n        email,\n        password\n      } = this.state;\n      this.setState({\n        loading: true\n      });\n\n      if (email.trim().length > 0 && password.trim().length > 0) {\n        let params = {\n          userData: {\n            email: email,\n            password: password\n          },\n          url: '/auth/login',\n          socialLogin: false\n        };\n        this.props.login(params).then(res => {\n          if (!res.data.response.status) {\n            let errorMessage = errorHandle(res.data.statusCode);\n            this.setState({\n              errorMessage: errorMessage.message\n            });\n          } else {\n            let params = {\n              url: '/likepost'\n            };\n            this.props.getPostLikes(params);\n            this.setState({\n              errorMessage: ''\n            });\n          }\n\n          this.setState({\n            loading: false\n          });\n        });\n      } else {\n        this.setState({\n          errorMessage: 'please fill all the fields',\n          loading: false\n        });\n      }\n    });\n\n    _defineProperty(this, \"closeError\", () => {\n      this.setState({\n        errorMessage: \"\",\n        error: false\n      });\n    });\n\n    _defineProperty(this, \"textChangeHandle\", (e, key) => {\n      this.setState({\n        [key]: e.target.value\n      });\n    });\n\n    this.state = {\n      email: '',\n      password: '',\n      emailSent: this.props.router.query.passwordResetSent ? +this.props.router.query.passwordResetSent : undefined,\n      // error: false,\n      errorMessage: '',\n      loading: false\n    };\n  }\n\n  componentDidMount() {\n    const pClass = this;\n    document.querySelector('.container').addEventListener('keypress', function (e) {\n      if (e.key === 'Enter') {\n        pClass.userLogin();\n      }\n    });\n  }\n  /**\r\n   * @param {*email(string), password(string) url(string) socialLogin(boolen)} params ,\r\n   * function for userlogin\r\n   */\n\n\n  render() {\n    let {\n      email,\n      password,\n      emailSent,\n      error,\n      errorMessage,\n      loading\n    } = this.state;\n    return __jsx(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: \"col-lg-4 col-md-6 col-12 mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }, __jsx(Logo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }\n    }), __jsx(\"h5\", {\n      className: \"text-light mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }\n    }, \"Login\"), emailSent && __jsx(\"div\", {\n      className: \"alert alert-success text-center mt-30\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 39\n      }\n    }, __jsx(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 29\n      }\n    }, \"Success!\"), \" Please check your email for the new password\"), __jsx(\"div\", {\n      className: \"text-box mt-30\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 25\n      }\n    }, __jsx(\"div\", {\n      className: \"form-group align-middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 29\n      }\n    }, __jsx(\"label\", {\n      className: \"text-light w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 33\n      }\n    }, \"Email Address\"), __jsx(\"input\", {\n      type: \"email\",\n      value: email,\n      onChange: e => this.textChangeHandle(e, \"email\"),\n      placeholder: \"john@gmail.com\",\n      className: \"input-text text-white w-100\",\n      \"aria-describedby\": \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 33\n      }\n    }))), __jsx(\"div\", {\n      className: \"text-box mt-30\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 25\n      }\n    }, __jsx(\"div\", {\n      className: \"form-group align-middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 29\n      }\n    }, __jsx(\"div\", {\n      className: \"password-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 33\n      }\n    }, __jsx(\"input\", {\n      type: \"password\",\n      value: password,\n      onChange: e => this.textChangeHandle(e, \"password\"),\n      placeholder: \"Password\",\n      className: \"input-text text-white w-100\",\n      \"aria-describedby\": \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 37\n      }\n    })))), __jsx(\"p\", {\n      className: \"text-red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }\n    }, \" \", errorMessage, \" \"), __jsx(\"div\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 25\n      }\n    }, loading && __jsx(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 66\n      }\n    })), __jsx(\"div\", {\n      className: \" remember-me text-box mt-30 mb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 25\n      }\n    }, __jsx(Link, {\n      href: \"/forgot-password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 29\n      }\n    }, __jsx(\"a\", {\n      className: \"d-flex justify-content-end float-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 33\n      }\n    }, __jsx(\"small\", {\n      className: \"d-flex form-text text-muted justify-content-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 87\n      }\n    }, \"Forget Password?\")))), __jsx(\"div\", {\n      className: \"registration-btn mt-30\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 25\n      }\n    }, __jsx(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary btn-md btn-block text-light\",\n      onClick: this.userLogin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 29\n      }\n    }, \"Login\")), __jsx(\"p\", {\n      className: \"auth-next-pfont-weight-light text-center text-light mt-10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 25\n      }\n    }, \"or\"), __jsx(\"div\", {\n      className: \"facebooklogin-btn mt-20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 25\n      }\n    }, __jsx(GoogleLogin, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 29\n      }\n    })), __jsx(\"div\", {\n      className: \"facebooklogin-btn mt-30\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 25\n      }\n    }, __jsx(FBbutton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 29\n      }\n    })), __jsx(\"div\", {\n      className: \"text-box mt-30\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 25\n      }\n    }, __jsx(\"div\", {\n      className: \"form-group ml-20 mr-20 align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 29\n      }\n    }, __jsx(\"small\", {\n      className: \"form-text text-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 33\n      }\n    }, \"Don't have an account? \", __jsx(\"span\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 96\n      }\n    }, __jsx(Link, {\n      href: \"/signup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 126\n      }\n    }, __jsx(\"a\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 147\n      }\n    }, \"click here\")))))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    hasPrevUrlBool: state.general.hasPrevUrl\n  };\n}; // export default LoginCom;\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    login: data => dispatch(login(data)),\n    getPostLikes: data => dispatch(getPostLikes(data))\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(LoginCom));","map":{"version":3,"sources":["F:/beliefchallenge/beliefchallenge_client/components/login/index.js"],"names":["React","Component","Link","FBbutton","GoogleLogin","connect","login","Router","withRouter","errorHandle","Loader","Logo","getPostLikes","LoginCom","constructor","props","email","password","state","setState","loading","trim","length","params","userData","url","socialLogin","then","res","data","response","status","errorMessage","statusCode","message","error","e","key","target","value","emailSent","router","query","passwordResetSent","undefined","componentDidMount","pClass","document","querySelector","addEventListener","userLogin","render","textChangeHandle","mapStateToProps","hasPrevUrlBool","general","hasPrevUrl","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport Link from 'next/link'\r\nimport FBbutton from 'components/socialauthenticationbutton/fblogin'\r\nimport GoogleLogin from 'components/socialauthenticationbutton/googlelogin'\r\nimport { connect } from 'react-redux';\r\nimport { login } from 'redux/action/authAction.js'\r\nimport Router, { withRouter } from 'next/router'\r\nimport { errorHandle } from 'common/error-message'\r\nimport Loader from 'components/loading'\r\nimport Logo from 'components/common/Logo'\r\nimport { getPostLikes } from 'redux/action/generalAction'\r\n\r\n\r\n/**\r\n * created by zain ahmed \r\n * created date: 24/12/2019\r\n * login class component\r\n */\r\nclass LoginCom extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            emailSent: this.props.router.query.passwordResetSent ? +this.props.router.query.passwordResetSent : undefined,\r\n            // error: false,\r\n            errorMessage: '',\r\n            loading: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const pClass = this;\r\n        document.querySelector('.container').addEventListener('keypress', function (e) {\r\n            if (e.key === 'Enter') {\r\n                pClass.userLogin();\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @param {*email(string), password(string) url(string) socialLogin(boolen)} params ,\r\n     * function for userlogin\r\n     */\r\n    userLogin = () => {\r\n        let { email, password } = this.state\r\n        this.setState({ loading: true })\r\n\r\n        if (email.trim().length > 0 && password.trim().length > 0) {\r\n            let params = {\r\n                userData: {\r\n                    email: email,\r\n                    password: password,\r\n                },\r\n                url: '/auth/login',\r\n                socialLogin: false\r\n            }\r\n            this.props.login(params).then(res => {\r\n                if (!res.data.response.status) {\r\n                    let errorMessage = errorHandle(res.data.statusCode)\r\n                    this.setState({ errorMessage: errorMessage.message })\r\n                } else {\r\n                    let params = {\r\n                        url: '/likepost'\r\n                    }\r\n                    this.props.getPostLikes(params)\r\n\r\n                    this.setState({ errorMessage: '' })\r\n                }\r\n                this.setState({ loading: false })\r\n\r\n            })\r\n        }\r\n        else {\r\n            this.setState({ errorMessage: 'please fill all the fields', loading: false })\r\n        }\r\n\r\n\r\n    }\r\n\r\n    closeError = () => {\r\n        this.setState({ errorMessage: \"\", error: false })\r\n\r\n    }\r\n\r\n    textChangeHandle = (e, key) => {\r\n        this.setState({ [key]: e.target.value })\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        let { email, password, emailSent, error, errorMessage, loading } = this.state\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-4 col-md-6 col-12 mx-auto\">\r\n                        <Logo />\r\n                        <h5 className='text-light mb-0'>Login</h5>\r\n\r\n                        {emailSent && <div className=\"alert alert-success text-center mt-30\" role=\"alert\">\r\n                            <strong>Success!</strong> Please check your email for the new password\r\n                        </div>}\r\n                        {/* {error && <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n                            <strong>  <p className='text-right cursor-pointer' onClick={this.closeError}>X</p></strong>\r\n                            <strong>404</strong> {errorMessage}\r\n                        </div>} */}\r\n                        <div className='text-box mt-30'>\r\n                            <div className=\"form-group align-middle\">\r\n                                <label className=\"text-light w-100\">Email Address</label>\r\n                                <input type=\"email\" value={email} onChange={e => this.textChangeHandle(e, \"email\")} placeholder=\"john@gmail.com\" className=\"input-text text-white w-100\" aria-describedby=\"email\" />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className='text-box mt-30'>\r\n                            <div className=\"form-group align-middle\">\r\n                                <div className='password-field'>\r\n                                    <input type=\"password\" value={password} onChange={e => this.textChangeHandle(e, \"password\")} placeholder=\"Password\" className=\"input-text text-white w-100\" aria-describedby=\"password\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <p className='text-red'> {errorMessage} </p>\r\n                        <div className='text-center'>{loading && <Loader />}</div>\r\n                        <div className=' remember-me text-box mt-30 mb-5'>\r\n                            {/* <div className=' d-flex justify-content-start float-left'>\r\n                                <small className=\"d-flex form-text text-muted \"><input type=\"checkbox\" className=\"mt-5 mr-20\" />Remember Me</small>\r\n                            </div> */}\r\n                            <Link href=\"/forgot-password\">\r\n                                <a className='d-flex justify-content-end float-right'><small className=\"d-flex form-text text-muted justify-content-end\">Forget Password?</small></a>\r\n                            </Link>\r\n\r\n                        </div>\r\n                        <div className='registration-btn mt-30'>\r\n                            <button type=\"button\" className=\"btn btn-primary btn-md btn-block text-light\" onClick={this.userLogin}>Login</button>\r\n                        </div>\r\n                        <p className='auth-next-pfont-weight-light text-center text-light mt-10'>or</p>\r\n                        <div className='facebooklogin-btn mt-20'>\r\n                            <GoogleLogin />\r\n\r\n                        </div>\r\n                        <div className='facebooklogin-btn mt-30'>\r\n                            <FBbutton />\r\n\r\n                        </div>\r\n                        <div className='text-box mt-30'>\r\n                            <div className=\"form-group ml-20 mr-20 align-middle text-center\">\r\n                                <small className=\"form-text text-light\">Don't have an account? <span className='text-danger'><Link href='/signup'><a className='text-danger'>click here</a></Link></span></small>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        hasPrevUrlBool: state.general.hasPrevUrl,\r\n    };\r\n}\r\n// export default LoginCom;\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        login: data => dispatch(login(data)),\r\n        getPostLikes: data => dispatch(getPostLikes(data))\r\n\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(LoginCom));"]},"metadata":{},"sourceType":"module"}