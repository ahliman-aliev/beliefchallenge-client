{"ast":null,"code":"import _Reflect$construct from \"@babel/runtime-corejs2/core-js/reflect/construct\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"F:\\\\beliefchallenge\\\\beliefchallenge_client\\\\components\\\\login\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = _Reflect$construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false; if (_Reflect$construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(_Reflect$construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Link from 'next/link';\nimport FBbutton from 'components/socialauthenticationbutton/fblogin';\nimport GoogleLogin from 'components/socialauthenticationbutton/googlelogin';\nimport { connect } from 'react-redux';\nimport { login as _login } from 'redux/action/authAction.js';\nimport Router, { withRouter } from 'next/router';\nimport { errorHandle } from 'common/error-message';\nimport Loader from 'components/loading';\nimport Logo from 'components/common/Logo';\nimport { getPostLikes as _getPostLikes } from 'redux/action/generalAction';\n/**\r\n * created by zain ahmed \r\n * created date: 24/12/2019\r\n * login class component\r\n */\n\nvar LoginCom = /*#__PURE__*/function (_Component) {\n  _inherits(LoginCom, _Component);\n\n  var _super = _createSuper(LoginCom);\n\n  function LoginCom(props) {\n    var _this;\n\n    _classCallCheck(this, LoginCom);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"userLogin\", function () {\n      var _this$state = _this.state,\n          email = _this$state.email,\n          password = _this$state.password;\n\n      _this.setState({\n        loading: true\n      });\n\n      if (email.trim().length > 0 && password.trim().length > 0) {\n        var params = {\n          userData: {\n            email: email,\n            password: password\n          },\n          url: '/auth/login',\n          socialLogin: false\n        };\n\n        _this.props.login(params).then(function (res) {\n          if (!res.data.response.status) {\n            var errorMessage = errorHandle(res.data.statusCode);\n\n            _this.setState({\n              errorMessage: errorMessage.message\n            });\n          } else {\n            var _params = {\n              url: '/likepost'\n            };\n\n            _this.props.getPostLikes(_params);\n\n            _this.setState({\n              errorMessage: ''\n            });\n          }\n\n          _this.setState({\n            loading: false\n          });\n        });\n      } else {\n        _this.setState({\n          errorMessage: 'please fill all the fields',\n          loading: false\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"closeError\", function () {\n      _this.setState({\n        errorMessage: \"\",\n        error: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"textChangeHandle\", function (e, key) {\n      _this.setState(_defineProperty({}, key, e.target.value));\n    });\n\n    _this.state = {\n      email: '',\n      password: '',\n      emailSent: _this.props.router.query.passwordResetSent ? +_this.props.router.query.passwordResetSent : undefined,\n      // error: false,\n      errorMessage: '',\n      loading: false\n    };\n    return _this;\n  }\n\n  _createClass(LoginCom, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var pClass = this;\n      document.querySelector('.container').addEventListener('keypress', function (e) {\n        if (e.key === 'Enter') {\n          pClass.userLogin();\n        }\n      });\n    }\n    /**\r\n     * @param {*email(string), password(string) url(string) socialLogin(boolen)} params ,\r\n     * function for userlogin\r\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          email = _this$state2.email,\n          password = _this$state2.password,\n          emailSent = _this$state2.emailSent,\n          error = _this$state2.error,\n          errorMessage = _this$state2.errorMessage,\n          loading = _this$state2.loading;\n      return __jsx(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }\n      }, __jsx(\"div\", {\n        className: \"col-lg-4 col-md-6 col-12 mx-auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }\n      }, __jsx(Logo, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }\n      }), __jsx(\"h5\", {\n        className: \"text-light mb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }\n      }, \"Login\"), emailSent && __jsx(\"div\", {\n        className: \"alert alert-success text-center mt-30\",\n        role: \"alert\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 39\n        }\n      }, __jsx(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 29\n        }\n      }, \"Success!\"), \" Please check your email for the new password\"), __jsx(\"div\", {\n        className: \"text-box mt-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }\n      }, __jsx(\"div\", {\n        className: \"form-group align-middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 29\n        }\n      }, __jsx(\"label\", {\n        className: \"text-light w-100\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 33\n        }\n      }, \"Email Address\"), __jsx(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: function onChange(e) {\n          return _this2.textChangeHandle(e, \"email\");\n        },\n        placeholder: \"john@gmail.com\",\n        className: \"input-text text-white w-100\",\n        \"aria-describedby\": \"email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 33\n        }\n      }))), __jsx(\"div\", {\n        className: \"text-box mt-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }\n      }, __jsx(\"div\", {\n        className: \"form-group align-middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 29\n        }\n      }, __jsx(\"div\", {\n        className: \"password-field\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 33\n        }\n      }, __jsx(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: function onChange(e) {\n          return _this2.textChangeHandle(e, \"password\");\n        },\n        placeholder: \"Password\",\n        className: \"input-text text-white w-100\",\n        \"aria-describedby\": \"password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 37\n        }\n      })))), __jsx(\"p\", {\n        className: \"text-red\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 25\n        }\n      }, \" \", errorMessage, \" \"), __jsx(\"div\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }\n      }, loading && __jsx(Loader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 66\n        }\n      })), __jsx(\"div\", {\n        className: \" remember-me text-box mt-30 mb-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }\n      }, __jsx(Link, {\n        href: \"/forgot-password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 29\n        }\n      }, __jsx(\"a\", {\n        className: \"d-flex justify-content-end float-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 33\n        }\n      }, __jsx(\"small\", {\n        className: \"d-flex form-text text-muted justify-content-end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 87\n        }\n      }, \"Forget Password?\")))), __jsx(\"div\", {\n        className: \"registration-btn mt-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 25\n        }\n      }, __jsx(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary btn-md btn-block text-light\",\n        onClick: this.userLogin,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 29\n        }\n      }, \"Login\")), __jsx(\"p\", {\n        className: \"auth-next-pfont-weight-light text-center text-light mt-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 25\n        }\n      }, \"or\"), __jsx(\"div\", {\n        className: \"facebooklogin-btn mt-20\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 25\n        }\n      }, __jsx(GoogleLogin, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 29\n        }\n      })), __jsx(\"div\", {\n        className: \"facebooklogin-btn mt-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 25\n        }\n      }, __jsx(FBbutton, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 29\n        }\n      })), __jsx(\"div\", {\n        className: \"text-box mt-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }\n      }, __jsx(\"div\", {\n        className: \"form-group ml-20 mr-20 align-middle text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 29\n        }\n      }, __jsx(\"small\", {\n        className: \"form-text text-light\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 33\n        }\n      }, \"Don't have an account? \", __jsx(\"span\", {\n        className: \"text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 96\n        }\n      }, __jsx(Link, {\n        href: \"/signup\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 126\n        }\n      }, __jsx(\"a\", {\n        className: \"text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 147\n        }\n      }, \"click here\")))))))));\n    }\n  }]);\n\n  return LoginCom;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    hasPrevUrlBool: state.general.hasPrevUrl\n  };\n}; // export default LoginCom;\n\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    login: function login(data) {\n      return dispatch(_login(data));\n    },\n    getPostLikes: function getPostLikes(data) {\n      return dispatch(_getPostLikes(data));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(LoginCom));","map":{"version":3,"sources":["F:/beliefchallenge/beliefchallenge_client/components/login/index.js"],"names":["React","Component","Link","FBbutton","GoogleLogin","connect","login","Router","withRouter","errorHandle","Loader","Logo","getPostLikes","LoginCom","props","state","email","password","setState","loading","trim","length","params","userData","url","socialLogin","then","res","data","response","status","errorMessage","statusCode","message","error","e","key","target","value","emailSent","router","query","passwordResetSent","undefined","pClass","document","querySelector","addEventListener","userLogin","textChangeHandle","mapStateToProps","hasPrevUrlBool","general","hasPrevUrl","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport Link from 'next/link'\r\nimport FBbutton from 'components/socialauthenticationbutton/fblogin'\r\nimport GoogleLogin from 'components/socialauthenticationbutton/googlelogin'\r\nimport { connect } from 'react-redux';\r\nimport { login } from 'redux/action/authAction.js'\r\nimport Router, { withRouter } from 'next/router'\r\nimport { errorHandle } from 'common/error-message'\r\nimport Loader from 'components/loading'\r\nimport Logo from 'components/common/Logo'\r\nimport { getPostLikes } from 'redux/action/generalAction'\r\n\r\n\r\n/**\r\n * created by zain ahmed \r\n * created date: 24/12/2019\r\n * login class component\r\n */\r\nclass LoginCom extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            emailSent: this.props.router.query.passwordResetSent ? +this.props.router.query.passwordResetSent : undefined,\r\n            // error: false,\r\n            errorMessage: '',\r\n            loading: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const pClass = this;\r\n        document.querySelector('.container').addEventListener('keypress', function (e) {\r\n            if (e.key === 'Enter') {\r\n                pClass.userLogin();\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @param {*email(string), password(string) url(string) socialLogin(boolen)} params ,\r\n     * function for userlogin\r\n     */\r\n    userLogin = () => {\r\n        let { email, password } = this.state\r\n        this.setState({ loading: true })\r\n\r\n        if (email.trim().length > 0 && password.trim().length > 0) {\r\n            let params = {\r\n                userData: {\r\n                    email: email,\r\n                    password: password,\r\n                },\r\n                url: '/auth/login',\r\n                socialLogin: false\r\n            }\r\n            this.props.login(params).then(res => {\r\n                if (!res.data.response.status) {\r\n                    let errorMessage = errorHandle(res.data.statusCode)\r\n                    this.setState({ errorMessage: errorMessage.message })\r\n                } else {\r\n                    let params = {\r\n                        url: '/likepost'\r\n                    }\r\n                    this.props.getPostLikes(params)\r\n\r\n                    this.setState({ errorMessage: '' })\r\n                }\r\n                this.setState({ loading: false })\r\n\r\n            })\r\n        }\r\n        else {\r\n            this.setState({ errorMessage: 'please fill all the fields', loading: false })\r\n        }\r\n\r\n\r\n    }\r\n\r\n    closeError = () => {\r\n        this.setState({ errorMessage: \"\", error: false })\r\n\r\n    }\r\n\r\n    textChangeHandle = (e, key) => {\r\n        this.setState({ [key]: e.target.value })\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        let { email, password, emailSent, error, errorMessage, loading } = this.state\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-4 col-md-6 col-12 mx-auto\">\r\n                        <Logo />\r\n                        <h5 className='text-light mb-0'>Login</h5>\r\n\r\n                        {emailSent && <div className=\"alert alert-success text-center mt-30\" role=\"alert\">\r\n                            <strong>Success!</strong> Please check your email for the new password\r\n                        </div>}\r\n                        {/* {error && <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n                            <strong>  <p className='text-right cursor-pointer' onClick={this.closeError}>X</p></strong>\r\n                            <strong>404</strong> {errorMessage}\r\n                        </div>} */}\r\n                        <div className='text-box mt-30'>\r\n                            <div className=\"form-group align-middle\">\r\n                                <label className=\"text-light w-100\">Email Address</label>\r\n                                <input type=\"email\" value={email} onChange={e => this.textChangeHandle(e, \"email\")} placeholder=\"john@gmail.com\" className=\"input-text text-white w-100\" aria-describedby=\"email\" />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className='text-box mt-30'>\r\n                            <div className=\"form-group align-middle\">\r\n                                <div className='password-field'>\r\n                                    <input type=\"password\" value={password} onChange={e => this.textChangeHandle(e, \"password\")} placeholder=\"Password\" className=\"input-text text-white w-100\" aria-describedby=\"password\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <p className='text-red'> {errorMessage} </p>\r\n                        <div className='text-center'>{loading && <Loader />}</div>\r\n                        <div className=' remember-me text-box mt-30 mb-5'>\r\n                            {/* <div className=' d-flex justify-content-start float-left'>\r\n                                <small className=\"d-flex form-text text-muted \"><input type=\"checkbox\" className=\"mt-5 mr-20\" />Remember Me</small>\r\n                            </div> */}\r\n                            <Link href=\"/forgot-password\">\r\n                                <a className='d-flex justify-content-end float-right'><small className=\"d-flex form-text text-muted justify-content-end\">Forget Password?</small></a>\r\n                            </Link>\r\n\r\n                        </div>\r\n                        <div className='registration-btn mt-30'>\r\n                            <button type=\"button\" className=\"btn btn-primary btn-md btn-block text-light\" onClick={this.userLogin}>Login</button>\r\n                        </div>\r\n                        <p className='auth-next-pfont-weight-light text-center text-light mt-10'>or</p>\r\n                        <div className='facebooklogin-btn mt-20'>\r\n                            <GoogleLogin />\r\n\r\n                        </div>\r\n                        <div className='facebooklogin-btn mt-30'>\r\n                            <FBbutton />\r\n\r\n                        </div>\r\n                        <div className='text-box mt-30'>\r\n                            <div className=\"form-group ml-20 mr-20 align-middle text-center\">\r\n                                <small className=\"form-text text-light\">Don't have an account? <span className='text-danger'><Link href='/signup'><a className='text-danger'>click here</a></Link></span></small>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        hasPrevUrlBool: state.general.hasPrevUrl,\r\n    };\r\n}\r\n// export default LoginCom;\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        login: data => dispatch(login(data)),\r\n        getPostLikes: data => dispatch(getPostLikes(data))\r\n\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(LoginCom));"]},"metadata":{},"sourceType":"module"}