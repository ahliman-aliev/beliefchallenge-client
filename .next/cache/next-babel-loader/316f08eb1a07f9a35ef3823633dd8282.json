{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"F:\\\\beliefchallenge\\\\beliefchallenge_client\\\\components\\\\post\\\\comment\\\\postcomment.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport profilelogo from 'assets/images/profilelogo.png';\nimport commentsend from 'assets/images/commentsend.png';\nimport genericfunctions from 'utilfunction/util-api-service';\nimport { connect } from 'react-redux';\nimport Loader from 'components/loading';\nimport getObject from 'common/jwt-services';\n/**\r\n * created by zain ahmed\r\n * created date: 18/12/2019\r\n * class componen for create comment on single post\r\n */\n\nclass postComment extends Component {\n  constructor() {\n    super();\n\n    _defineProperty(this, \"postCommenthandle\", async () => {\n      let {\n        commentContent,\n        user_profile\n      } = this.state;\n      this.setState({\n        loader: true\n      });\n      let params = {\n        content: commentContent,\n        postId: this.props.postId,\n        createdBy: this.props.auth.userId,\n        socialLogin: this.props.auth.socialLogin\n      };\n\n      if (commentContent.length <= 0) {\n        console.log(\"please fill the field\");\n      } else {\n        genericfunctions._postRequest('/comment', params).then(res => {\n          let obj = {\n            content: commentContent,\n            user_profile: {\n              fullName: user_profile.fullName,\n              email: user_profile.email,\n              profilePic: {\n                url: user_profile.profilePic\n              }\n            }\n          }; // this.props.pushToPost(obj)\n\n          this.setState({\n            commentContent: '',\n            loader: false\n          });\n          this.props.fetchComments(1, true);\n        });\n      }\n    });\n\n    _defineProperty(this, \"txtHandle\", e => {\n      this.setState({\n        commentContent: e.target.value\n      });\n    });\n\n    _defineProperty(this, \"onEnterPress\", e => {\n      if (e.keyCode == 13 && e.shiftKey == false) {\n        e.preventDefault();\n        this.setState({\n          loader: true\n        });\n        let {\n          commentContent,\n          user_profile\n        } = this.state;\n        let params = {\n          content: commentContent,\n          postId: this.props.postId,\n          createdBy: this.props.auth.userId,\n          socialLogin: this.props.auth.socialLogin\n        };\n\n        if (commentContent.length <= 0) {\n          console.log(\"please fill the field\");\n        } else {\n          genericfunctions._postRequest('/comment', params).then(res => {\n            let obj = {\n              content: commentContent,\n              user_profile: {\n                fullName: user_profile.fullName,\n                email: user_profile.email,\n                profilePic: {\n                  url: user_profile.profilePic\n                }\n              }\n            }; // this.props.pushToPost(obj)\n\n            this.setState({\n              commentContent: '',\n              loader: false\n            });\n            this.props.fetchComments(1, true);\n          });\n        } // this.postCommet.submit();\n\n      }\n    });\n\n    this.state = {\n      commentContent: '',\n      loader: false,\n      user_profile: JSON.parse(getObject.getObject('authUser'))\n    };\n  }\n  /**\r\n   * function for create/post commont\r\n   * @param {commentContent(string) postId(string) createdBy(string)}\r\n   */\n\n\n  render() {\n    let {\n      commentContent,\n      loader\n    } = this.state;\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: \"send-comment-main d-flex pt-10 pl-20 pr-10 pb-10 border-bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, __jsx(\"form\", {\n      ref: el => this.postCommet = el,\n      className: \"d-flex bd-highlight w-100 align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    }, __jsx(\"div\", {\n      className: \"profile-pic bd-highlight\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 25\n      }\n    }, __jsx(\"img\", {\n      src: this.props.auth.profilePic ? this.props.auth.profilePic : profilelogo,\n      className: \"rounded-circle img-fluid\",\n      alt: \"profilelogo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 29\n      }\n    })), __jsx(\"div\", {\n      className: \"p-2 flex-grow-1 bd-highlight\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 25\n      }\n    }, __jsx(\"div\", {\n      className: \"post-comment h-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 29\n      }\n    }, __jsx(\"textarea\", {\n      onKeyDown: this.onEnterPress,\n      onChange: this.txtHandle,\n      value: commentContent,\n      type: \"string\",\n      className: \"form-control h-100\",\n      \"aria-describedby\": \"comment\",\n      placeholder: \"Write a Comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 33\n      }\n    }))), __jsx(\"div\", {\n      className: \"p-2 cursor-pointer bd-highlight\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 25\n      }\n    }, __jsx(\"div\", {\n      className: \"commentsend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 29\n      }\n    }, __jsx(\"img\", {\n      src: commentsend,\n      alt: \"commentsend\",\n      onClick: this.postCommenthandle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 33\n      }\n    }))))), loader && __jsx(\"div\", {\n      className: \"text-center mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 28\n      }\n    }, __jsx(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    auth: state.auth.authUser\n  };\n}\n\nexport default connect(mapStateToProps)(postComment);","map":{"version":3,"sources":["F:/beliefchallenge/beliefchallenge_client/components/post/comment/postcomment.js"],"names":["React","Component","profilelogo","commentsend","genericfunctions","connect","Loader","getObject","postComment","constructor","commentContent","user_profile","state","setState","loader","params","content","postId","props","createdBy","auth","userId","socialLogin","length","console","log","_postRequest","then","res","obj","fullName","email","profilePic","url","fetchComments","e","target","value","keyCode","shiftKey","preventDefault","JSON","parse","render","el","postCommet","onEnterPress","txtHandle","postCommenthandle","mapStateToProps","authUser"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport profilelogo from 'assets/images/profilelogo.png'\r\nimport commentsend from 'assets/images/commentsend.png'\r\nimport genericfunctions from 'utilfunction/util-api-service'\r\nimport { connect } from 'react-redux';\r\nimport Loader from 'components/loading'\r\nimport getObject from 'common/jwt-services'\r\n\r\n\r\n/**\r\n * created by zain ahmed\r\n * created date: 18/12/2019\r\n * class componen for create comment on single post\r\n */\r\nclass postComment extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            commentContent: '',\r\n            loader: false,\r\n            user_profile: JSON.parse(getObject.getObject('authUser'))\r\n        }\r\n    }\r\n\r\n    /**\r\n     * function for create/post commont\r\n     * @param {commentContent(string) postId(string) createdBy(string)}\r\n     */\r\n    postCommenthandle = async () => {\r\n        let { commentContent, user_profile } = this.state\r\n        this.setState({ loader: true })\r\n\r\n        let params = {\r\n            content: commentContent, postId: this.props.postId,\r\n            createdBy: this.props.auth.userId,\r\n            socialLogin: this.props.auth.socialLogin\r\n        }\r\n\r\n\r\n        if (commentContent.length <= 0) {\r\n            console.log(\"please fill the field\")\r\n        } else {\r\n            genericfunctions._postRequest('/comment', params).then(res => {\r\n                let obj = {\r\n                    content: commentContent,\r\n                    user_profile: {\r\n                        fullName: user_profile.fullName,\r\n                        email: user_profile.email,\r\n                        profilePic: {\r\n                            url: user_profile.profilePic\r\n                        }\r\n                    }\r\n                }\r\n                // this.props.pushToPost(obj)\r\n                this.setState({ commentContent: '', loader: false })\r\n                this.props.fetchComments(1, true)\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    txtHandle = (e) => {\r\n        this.setState({ commentContent: e.target.value })\r\n    }\r\n\r\n    onEnterPress = (e) => {\r\n        if (e.keyCode == 13 && e.shiftKey == false) {\r\n            e.preventDefault();\r\n            this.setState({ loader: true })\r\n            let { commentContent, user_profile } = this.state\r\n            let params = { content: commentContent, postId: this.props.postId, createdBy: this.props.auth.userId, socialLogin: this.props.auth.socialLogin }\r\n\r\n            if (commentContent.length <= 0) {\r\n                console.log(\"please fill the field\")\r\n            } else {\r\n                genericfunctions._postRequest('/comment', params).then(res => {\r\n\r\n                    let obj = {\r\n                        content: commentContent,\r\n                        user_profile: {\r\n                            fullName: user_profile.fullName,\r\n                            email: user_profile.email,\r\n                            profilePic: {\r\n                                url: user_profile.profilePic\r\n                            }\r\n                        }\r\n                    }\r\n                    // this.props.pushToPost(obj)\r\n                    this.setState({ commentContent: '', loader: false })\r\n                    this.props.fetchComments(1, true)\r\n                })\r\n            }\r\n            // this.postCommet.submit();\r\n        }\r\n    }\r\n    render() {\r\n        let { commentContent, loader } = this.state\r\n\r\n        return (\r\n            <>\r\n                <div className='send-comment-main d-flex pt-10 pl-20 pr-10 pb-10 border-bottom' >\r\n\r\n                    <form ref={el => this.postCommet = el} className='d-flex bd-highlight w-100 align-items-center'>\r\n                        <div className=\"profile-pic bd-highlight\">\r\n                            <img src={this.props.auth.profilePic ? this.props.auth.profilePic : profilelogo} className=\"rounded-circle img-fluid\" alt=\"profilelogo\" />\r\n                        </div>\r\n                        <div className=\"p-2 flex-grow-1 bd-highlight\">\r\n                            <div className=\"post-comment h-100\">\r\n                                {/* <input onChange={this.txtHandle} value={commentContent} type=\"string\" className=\"form-control h-100\" aria-describedby=\"comment\" placeholder=\"Write a Comment\" /> */}\r\n                                <textarea onKeyDown={this.onEnterPress} onChange={this.txtHandle} value={commentContent} type=\"string\" className=\"form-control h-100\" aria-describedby=\"comment\" placeholder=\"Write a Comment\" ></textarea>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"p-2 cursor-pointer bd-highlight\">\r\n                            <div className=\"commentsend\">\r\n\r\n                                <img src={commentsend} alt=\"commentsend\" onClick={this.postCommenthandle} />\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                {loader && <div className=\"text-center mt-2\">\r\n                    <Loader />\r\n                </div>}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        auth: state.auth.authUser,\r\n    };\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(postComment);"]},"metadata":{},"sourceType":"module"}