{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport axios from 'axios';\nimport { API_URL } from './config';\nimport getObject from 'common/jwt-services';\nlet cookieData = getObject.getObject('authUser');\nimport cookie from 'js-cookie';\nimport Router from 'next/router';\nlet AUTH_TOKEN = '';\n\nif (cookieData) {\n  let parsed = JSON.parse(getObject.getObject('authUser'));\n  AUTH_TOKEN = parsed.token;\n}\n\nconst instance = axios.create({\n  baseURL: API_URL\n}); // instance.defaults.headers.common['Authorization'] = AUTH_TOKEN;\n\ninstance.interceptors.request.use(function (request) {\n  if (!request.headers.common.Authorization) request.headers.common.Authorization = AUTH_TOKEN; // console.log(request.headers.common.Authorization, 'request');\n\n  return request;\n});\ninstance.interceptors.response.use(function (response) {\n  // Do something with response data\n  return response;\n}, function (error) {\n  if (error.response && error.response.status === 401) {\n    cookie.remove('authUser');\n    Router.push(\"/login\"); // window.location.replace(\"/login\");\n  } // Do something with response error\n\n\n  return _Promise.reject(error);\n});\nexport default instance;","map":{"version":3,"sources":["F:/beliefchallenge/beliefchallenge_client/common/config.axios.js"],"names":["axios","API_URL","getObject","cookieData","cookie","Router","AUTH_TOKEN","parsed","JSON","parse","token","instance","create","baseURL","interceptors","request","use","headers","common","Authorization","response","error","status","remove","push","reject"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,UAAxB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,IAAIC,UAAU,GAAGD,SAAS,CAACA,SAAV,CAAoB,UAApB,CAAjB;AACA,OAAOE,MAAP,MAAmB,WAAnB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,IAAIC,UAAU,GAAG,EAAjB;;AACA,IAAIH,UAAJ,EAAgB;AACZ,MAAII,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWP,SAAS,CAACA,SAAV,CAAoB,UAApB,CAAX,CAAb;AACAI,EAAAA,UAAU,GAAGC,MAAM,CAACG,KAApB;AACH;;AAED,MAAMC,QAAQ,GAAGX,KAAK,CAACY,MAAN,CAAa;AAC1BC,EAAAA,OAAO,EAAEZ;AADiB,CAAb,CAAjB,C,CAKA;;AACAU,QAAQ,CAACG,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CAAkC,UAAUD,OAAV,EAAmB;AACjD,MAAI,CAACA,OAAO,CAACE,OAAR,CAAgBC,MAAhB,CAAuBC,aAA5B,EACIJ,OAAO,CAACE,OAAR,CAAgBC,MAAhB,CAAuBC,aAAvB,GAAuCb,UAAvC,CAF6C,CAGjD;;AACA,SAAOS,OAAP;AACH,CALD;AAMAJ,QAAQ,CAACG,YAAT,CAAsBM,QAAtB,CAA+BJ,GAA/B,CAAmC,UAAUI,QAAV,EAAoB;AACnD;AACA,SAAOA,QAAP;AACH,CAHD,EAGG,UAAUC,KAAV,EAAiB;AAEhB,MAAIA,KAAK,CAACD,QAAN,IAAkBC,KAAK,CAACD,QAAN,CAAeE,MAAf,KAA0B,GAAhD,EAAqD;AACjDlB,IAAAA,MAAM,CAACmB,MAAP,CAAc,UAAd;AACAlB,IAAAA,MAAM,CAACmB,IAAP,CAAY,QAAZ,EAFiD,CAGjD;AACH,GANe,CAOhB;;;AACA,SAAO,SAAQC,MAAR,CAAeJ,KAAf,CAAP;AACH,CAZD;AAcA,eAAeV,QAAf","sourcesContent":["import axios from 'axios';\r\nimport { API_URL } from './config'\r\nimport getObject from 'common/jwt-services'\r\nlet cookieData = getObject.getObject('authUser');\r\nimport cookie from 'js-cookie'\r\nimport Router from 'next/router'\r\n\r\nlet AUTH_TOKEN = ''\r\nif (cookieData) {\r\n    let parsed = JSON.parse(getObject.getObject('authUser'))\r\n    AUTH_TOKEN = parsed.token\r\n}\r\n\r\nconst instance = axios.create({\r\n    baseURL: API_URL,\r\n\r\n})\r\n\r\n// instance.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\ninstance.interceptors.request.use(function (request) {\r\n    if (!request.headers.common.Authorization)\r\n        request.headers.common.Authorization = AUTH_TOKEN;\r\n    // console.log(request.headers.common.Authorization, 'request');\r\n    return request\r\n})\r\ninstance.interceptors.response.use(function (response) {\r\n    // Do something with response data\r\n    return response;\r\n}, function (error) {\r\n\r\n    if (error.response && error.response.status === 401) {\r\n        cookie.remove('authUser');\r\n        Router.push(\"/login\")\r\n        // window.location.replace(\"/login\");\r\n    }\r\n    // Do something with response error\r\n    return Promise.reject(error);\r\n});\r\n\r\nexport default instance;"]},"metadata":{},"sourceType":"module"}