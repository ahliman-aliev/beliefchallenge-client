{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _Reflect$construct from \"@babel/runtime-corejs2/core-js/reflect/construct\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"F:\\\\beliefchallenge\\\\beliefchallenge_client\\\\components\\\\post\\\\createpost\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = _Reflect$construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false; if (_Reflect$construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(_Reflect$construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport Select from 'react-select';\nimport genericfunctions from 'utilfunction/util-api-service';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'next/router';\nimport { ITEMS_LIMIT } from 'common/config';\nimport { getCategory as _getCategory } from 'redux/action/categoryAction';\nimport { fetchPost as _fetchPost } from 'redux/action/generalAction';\nimport Router from 'next/router';\nimport Loader from 'components/loading'; // import {fetchPost} from 'redux/action/generalAction'\n\n/**\r\n * created by zain ahmed\r\n * created date 22/12/2019\r\n * class component for created post \r\n */\n\nvar customStyles = {\n  option: function option(provided, state) {\n    return _objectSpread({}, provided, {\n      // borderBottom: '1px dotted #ffffff',\n      color: state.isSelected ? 'white' : 'black',\n      backgroundColor: state.isFocused ? \"#464444\" : state.isSelected ? \"#464444\" : null,\n      '&:hover': {\n        background: \"#464444\",\n        color: 'white'\n      },\n      '&:focus': {\n        background: \"#464444\",\n        color: 'white'\n      },\n      padding: 10\n    });\n  }\n};\n\nvar CreatePost = /*#__PURE__*/function (_Component) {\n  _inherits(CreatePost, _Component);\n\n  var _super = _createSuper(CreatePost);\n\n  function CreatePost(props) {\n    var _this;\n\n    _classCallCheck(this, CreatePost);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"fetchCategoryFN\", function () {// let { categoryData } = this.state;\n      // let categoryParams = {\n      //     params: {\n      //         url: \"/category\",\n      //     }\n      // }\n      // console.log(this.props.categoryData)\n      // this.props.categoryData.data.map(itm => {\n      //     return (\n      //         categoryData.push({ value: itm._id, label: itm.title })\n      //     )\n      // })\n      // this.props.getCategory(categoryParams).then(res => {\n      //     console.log(res)\n      // })\n      // genericfunctions._fetchWithOutParams('/category').then(res => {\n      //     res.data.response.data.map(itm => {\n      //         return (\n      //             categoryData.push({ value: itm._id, label: itm.title })\n      //         )\n      //     })\n      //     this.setState({ categoryData })\n      // })\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"textChangeHandle\", function (e, key) {\n      _this.setState(_defineProperty({}, key, e.target.value));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"postPostFN\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _this$state, selectedCategory, postQuestion, postOption1, postOption2, postOption3, postData;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this$state = _this.state, selectedCategory = _this$state.selectedCategory, postQuestion = _this$state.postQuestion, postOption1 = _this$state.postOption1, postOption2 = _this$state.postOption2, postOption3 = _this$state.postOption3; // || postOption2.length <= 0 || postOption3.length <= 0\n\n              if (postQuestion.length <= 0 || postOption1.length <= 0 || !selectedCategory.value) {\n                _this.setState({\n                  errorMessage: \"please fill all fields\"\n                });\n              } else {\n                postData = {\n                  userId: _this.props.auth.authUser.userId,\n                  categoryId: selectedCategory.value,\n                  postQuestion: postQuestion,\n                  options: [postOption1, postOption2, postOption3],\n                  socialLogin: _this.props.auth.authUser.socialLogin\n                };\n\n                _this.setState({\n                  Loading: true,\n                  errorMessage: ''\n                });\n\n                genericfunctions._postRequest('/post', postData).then(function (res) {\n                  if (res.data.response.status) {\n                    _this.setState({\n                      postQuestion: '',\n                      postOption1: '',\n                      postOption2: '',\n                      postOption3: '',\n                      selectedCategory: [],\n                      errorMessage: '',\n                      Loading: false\n                    });\n\n                    Router.push('/home');\n                  } else {\n                    _this.setState({\n                      errorMessage: res.data.response.message,\n                      Loading: false\n                    });\n                  }\n                });\n              }\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    _this.state = {\n      postQuestion: '',\n      postOption1: '',\n      postOption2: '',\n      postOption3: '',\n      selectedCategory: [],\n      categoryData: [],\n      errorMessage: '',\n      Loading: false\n    };\n    return _this;\n  }\n\n  _createClass(CreatePost, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchCategoryFN();\n    }\n  }, {\n    key: \"selectedCategoryHandle\",\n    value: function selectedCategoryHandle(e) {\n      this.setState({\n        selectedCategory: e\n      });\n    }\n    /**\r\n     * fetch category function \r\n     * @param {}\r\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          categoryData = _this$state2.categoryData,\n          selectedCategory = _this$state2.selectedCategory,\n          postQuestion = _this$state2.postQuestion,\n          postOption1 = _this$state2.postOption1,\n          postOption2 = _this$state2.postOption2,\n          postOption3 = _this$state2.postOption3,\n          errorMessage = _this$state2.errorMessage,\n          Loading = _this$state2.Loading;\n      return __jsx(React.Fragment, null, __jsx(\"div\", {\n        className: \"post-main-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 17\n        }\n      }, __jsx(\"div\", {\n        className: \"create-post bg-white p-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }\n      }, __jsx(\"div\", {\n        className: \"post-quetio\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 25\n        }\n      }, __jsx(\"div\", {\n        className: \"d-flex question mb-15 mt-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 29\n        }\n      }, __jsx(\"p\", {\n        className: \"m-0 font-weight-bold question-ibelieve\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 33\n        }\n      }, \"I believe \"), __jsx(\"p\", {\n        className: \"w-75 p-5 bg-gray-1 ml-5 question-field mb-0 question-ibelieve-input\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 33\n        }\n      }, __jsx(\"input\", {\n        type: \"string\",\n        value: postQuestion,\n        onChange: function onChange(e) {\n          return _this2.textChangeHandle(e, \"postQuestion\");\n        },\n        placeholder: \"Enter text here\",\n        className: \"input-text-post\",\n        \"aria-describedby\": \"querion\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 37\n        }\n      }), \" \", __jsx(\"span\", {\n        className: \"text-bold times-roman\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 224\n        }\n      }, \",\"))), __jsx(\"div\", {\n        className: \"d-flex w-100 mb-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 29\n        }\n      }, __jsx(\"p\", {\n        className: \"d-flex font-weight-bold mb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 33\n        }\n      }, \"but I might change my mind if:\")), __jsx(\"div\", {\n        className: \"w-100 mb-10 p-5 bg-gray-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 29\n        }\n      }, __jsx(\"div\", {\n        className: \"option-text d-flex option-text-inner pb-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 33\n        }\n      }, __jsx(\"span\", {\n        className: \"font-weight-bold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 37\n        }\n      }, \"1) \"), __jsx(\"input\", {\n        type: \"string\",\n        value: postOption1,\n        onChange: function onChange(e) {\n          return _this2.textChangeHandle(e, \"postOption1\");\n        },\n        placeholder: \"Enter text here\",\n        className: \"px-15 input-text w-100\",\n        \"aria-describedby\": \"querion\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 82\n        }\n      }))), __jsx(\"div\", {\n        className: \"w-100 mt-5 mb-10 p-5 bg-gray-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 29\n        }\n      }, __jsx(\"div\", {\n        className: \"option-text d-flex option-text-inner pb-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 33\n        }\n      }, __jsx(\"span\", {\n        className: \"font-weight-bold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 37\n        }\n      }, \"2) \"), __jsx(\"input\", {\n        type: \"string\",\n        value: postOption2,\n        onChange: function onChange(e) {\n          return _this2.textChangeHandle(e, \"postOption2\");\n        },\n        placeholder: \"\",\n        className: \"px-15 input-text w-100\",\n        \"aria-describedby\": \"querion\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 82\n        }\n      }))), __jsx(\"div\", {\n        className: \"w-100 mt-5 mb-10 p-5 bg-gray-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 29\n        }\n      }, __jsx(\"div\", {\n        className: \"option-text d-flex option-text-inner pb-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 33\n        }\n      }, __jsx(\"span\", {\n        className: \"font-weight-bold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 37\n        }\n      }, \"3) \"), __jsx(\"input\", {\n        type: \"string\",\n        value: postOption3,\n        onChange: function onChange(e) {\n          return _this2.textChangeHandle(e, \"postOption3\");\n        },\n        placeholder: \"\",\n        className: \"px-15 input-text w-100\",\n        \"aria-describedby\": \"querion\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 82\n        }\n      }))), __jsx(\"div\", {\n        className: \"row justify-content-between post-footer-panel mt-25\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 29\n        }\n      }, __jsx(\"div\", {\n        className: \"post-btn col-lg-6 col-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 33\n        }\n      }, __jsx(Select, {\n        styles: customStyles,\n        className: \"theme-select r-4\",\n        value: selectedCategory,\n        onChange: function onChange(e) {\n          return _this2.selectedCategoryHandle(e);\n        },\n        options: categoryData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 37\n        }\n      })), __jsx(\"div\", {\n        className: \"post-btn col-lg-6 col-12 text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 33\n        }\n      }, __jsx(\"button\", {\n        type: \"button\",\n        className: \"btn btn-danger px-50 w-auto\",\n        onClick: this.postPostFN,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 37\n        }\n      }, \"Post\")), errorMessage && __jsx(\"div\", {\n        className: \"text-center alert-error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 50\n        }\n      }, __jsx(\"p\", {\n        className: \"text-red\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 37\n        }\n      }, errorMessage)), Loading && __jsx(Loader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 45\n        }\n      }))))));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      // console.log(props.categoryData)\n      // console.log(state.categoryData)\n      if (props.categoryData.length != state.categoryData.length) {\n        // console.log(props.categoryData)\n        props.categoryData.map(function (itm) {\n          return state.categoryData.push({\n            value: itm._id,\n            label: itm.title\n          });\n        });\n      }\n\n      return null;\n    }\n  }]);\n\n  return CreatePost;\n}(Component);\n\nfunction mapStateToProps(state) {\n  // console.log(state.category)\n  return {\n    auth: state.auth,\n    categoryData: state.category.category\n  };\n}\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchPost: function fetchPost(data) {\n      return dispatch(_fetchPost(data));\n    },\n    getCategory: function getCategory(data) {\n      return dispatch(_getCategory(data));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(CreatePost));","map":{"version":3,"sources":["F:/beliefchallenge/beliefchallenge_client/components/post/createpost/index.js"],"names":["React","Component","Select","genericfunctions","connect","withRouter","ITEMS_LIMIT","getCategory","fetchPost","Router","Loader","customStyles","option","provided","state","color","isSelected","backgroundColor","isFocused","background","padding","CreatePost","props","e","key","setState","target","value","selectedCategory","postQuestion","postOption1","postOption2","postOption3","length","errorMessage","postData","userId","auth","authUser","categoryId","options","socialLogin","Loading","_postRequest","then","res","data","response","status","push","message","categoryData","fetchCategoryFN","textChangeHandle","selectedCategoryHandle","postPostFN","map","itm","_id","label","title","mapStateToProps","category","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Select from 'react-select';\r\nimport genericfunctions from 'utilfunction/util-api-service'\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'next/router'\r\nimport { ITEMS_LIMIT } from 'common/config'\r\nimport { getCategory } from 'redux/action/categoryAction'\r\nimport { fetchPost } from 'redux/action/generalAction'\r\nimport Router from 'next/router'\r\nimport Loader from 'components/loading'\r\n\r\n// import {fetchPost} from 'redux/action/generalAction'\r\n/**\r\n * created by zain ahmed\r\n * created date 22/12/2019\r\n * class component for created post \r\n */\r\nconst customStyles = {\r\n    option: (provided, state) => {\r\n        return {\r\n            ...provided,\r\n            // borderBottom: '1px dotted #ffffff',\r\n            color: state.isSelected ? 'white' : 'black',\r\n            backgroundColor: state.isFocused ? \"#464444\" : state.isSelected ? \"#464444\" : null,\r\n            '&:hover': {\r\n                background: \"#464444\",\r\n                color: 'white'\r\n            },\r\n            '&:focus': {\r\n                background: \"#464444\",\r\n                color: 'white'\r\n            },\r\n            padding: 10,\r\n        }\r\n    },\r\n}\r\nclass CreatePost extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            postQuestion: '',\r\n            postOption1: '',\r\n            postOption2: '',\r\n            postOption3: '',\r\n            selectedCategory: [],\r\n            categoryData: [],\r\n            errorMessage: '',\r\n            Loading: false\r\n        }\r\n    }\r\n    static getDerivedStateFromProps(props, state) {\r\n        // console.log(props.categoryData)\r\n        // console.log(state.categoryData)\r\n\r\n        if (props.categoryData.length != state.categoryData.length) {\r\n            // console.log(props.categoryData)\r\n            props.categoryData.map(itm => {\r\n                return (\r\n                    state.categoryData.push({ value: itm._id, label: itm.title })\r\n                )\r\n            })\r\n        }\r\n        return null\r\n    }\r\n    componentDidMount() {\r\n        this.fetchCategoryFN()\r\n    }\r\n    selectedCategoryHandle(e) {\r\n        this.setState({ selectedCategory: e })\r\n    }\r\n\r\n    /**\r\n     * fetch category function \r\n     * @param {}\r\n     */\r\n    fetchCategoryFN = () => {\r\n        // let { categoryData } = this.state;\r\n        // let categoryParams = {\r\n        //     params: {\r\n        //         url: \"/category\",\r\n        //     }\r\n        // }\r\n        // console.log(this.props.categoryData)\r\n        // this.props.categoryData.data.map(itm => {\r\n        //     return (\r\n        //         categoryData.push({ value: itm._id, label: itm.title })\r\n        //     )\r\n        // })\r\n        // this.props.getCategory(categoryParams).then(res => {\r\n        //     console.log(res)\r\n\r\n        // })\r\n\r\n        // genericfunctions._fetchWithOutParams('/category').then(res => {\r\n        //     res.data.response.data.map(itm => {\r\n        //         return (\r\n        //             categoryData.push({ value: itm._id, label: itm.title })\r\n        //         )\r\n        //     })\r\n        //     this.setState({ categoryData })\r\n        // })\r\n    }\r\n    textChangeHandle = (e, key) => {\r\n        this.setState({ [key]: e.target.value })\r\n    }\r\n\r\n    /**\r\n     * create post function \r\n     * @param {userid(string) categoryId(string) postQuetion(string) options(string)} \r\n     */\r\n    postPostFN = async () => {\r\n        let { selectedCategory, postQuestion, postOption1, postOption2, postOption3 } = this.state;\r\n        // || postOption2.length <= 0 || postOption3.length <= 0\r\n        if (postQuestion.length <= 0 || postOption1.length <= 0 || !selectedCategory.value) {\r\n            this.setState({ errorMessage: \"please fill all fields\" })\r\n        } else {\r\n            let postData = {\r\n                userId: this.props.auth.authUser.userId,\r\n                categoryId: selectedCategory.value,\r\n                postQuestion,\r\n                options: [\r\n                    postOption1,\r\n                    postOption2,\r\n                    postOption3\r\n                ],\r\n                socialLogin: this.props.auth.authUser.socialLogin\r\n            }\r\n            this.setState({ Loading: true, errorMessage: '' })\r\n            genericfunctions._postRequest('/post', postData).then(res => {\r\n                if (res.data.response.status) {\r\n\r\n                    this.setState({\r\n                        postQuestion: '',\r\n                        postOption1: '',\r\n                        postOption2: '',\r\n                        postOption3: '',\r\n                        selectedCategory: [],\r\n                        errorMessage: '',\r\n                        Loading: false\r\n                    })\r\n\r\n                    Router.push('/home')\r\n                } else {\r\n                    this.setState({ errorMessage: res.data.response.message, Loading: false })\r\n                }\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        let { categoryData, selectedCategory, postQuestion, postOption1, postOption2, postOption3, errorMessage, Loading } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <div className='post-main-container'>\r\n                    <div className=\"create-post bg-white p-30\">\r\n                        <div className='post-quetio'>\r\n                            <div className=\"d-flex question mb-15 mt-5\">\r\n                                <p className='m-0 font-weight-bold question-ibelieve'>I believe </p>\r\n                                <p className=\"w-75 p-5 bg-gray-1 ml-5 question-field mb-0 question-ibelieve-input\">\r\n                                    <input type=\"string\" value={postQuestion} onChange={e => this.textChangeHandle(e, \"postQuestion\")} placeholder='Enter text here' className=\"input-text-post\" aria-describedby=\"querion\" /> <span className=\"text-bold times-roman\">,</span>\r\n                                </p>\r\n                            </div>\r\n                            <div className='d-flex w-100 mb-10'>\r\n                                <p className='d-flex font-weight-bold mb-0'>but I might change my mind if:</p>\r\n                            </div>\r\n                            <div className='w-100 mb-10 p-5 bg-gray-1'>\r\n                                <div className=\"option-text d-flex option-text-inner pb-5\">\r\n                                    <span className='font-weight-bold'>1) </span><input type=\"string\" value={postOption1} onChange={e => this.textChangeHandle(e, \"postOption1\")} placeholder='Enter text here' className=\"px-15 input-text w-100\" aria-describedby=\"querion\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className='w-100 mt-5 mb-10 p-5 bg-gray-1'>\r\n                                <div className=\"option-text d-flex option-text-inner pb-5\">\r\n                                    <span className='font-weight-bold'>2) </span><input type=\"string\" value={postOption2} onChange={e => this.textChangeHandle(e, \"postOption2\")} placeholder='' className=\"px-15 input-text w-100\" aria-describedby=\"querion\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className='w-100 mt-5 mb-10 p-5 bg-gray-1'>\r\n                                <div className=\"option-text d-flex option-text-inner pb-5\">\r\n                                    <span className='font-weight-bold'>3) </span><input type=\"string\" value={postOption3} onChange={e => this.textChangeHandle(e, \"postOption3\")} placeholder='' className=\"px-15 input-text w-100\" aria-describedby=\"querion\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className='row justify-content-between post-footer-panel mt-25'>\r\n                                <div className='post-btn col-lg-6 col-12'>\r\n                                    <Select\r\n                                        styles={customStyles}\r\n                                        className='theme-select r-4'\r\n                                        value={selectedCategory}\r\n                                        onChange={e => this.selectedCategoryHandle(e)}\r\n                                        options={categoryData}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className='post-btn col-lg-6 col-12 text-right'>\r\n                                    <button type=\"button\" className=\"btn btn-danger px-50 w-auto\" onClick={this.postPostFN}>Post</button>\r\n                                </div>\r\n                                {errorMessage && <div className=\"text-center alert-error\">\r\n                                    <p className='text-red'>{errorMessage}</p>\r\n                                </div>}\r\n\r\n                                {Loading && <Loader />}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\nfunction mapStateToProps(state) {\r\n    // console.log(state.category)\r\n    return {\r\n        auth: state.auth,\r\n        categoryData: state.category.category\r\n    };\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchPost: data => dispatch(fetchPost(data)),\r\n        getCategory: data => dispatch(getCategory(data))\r\n    };\r\n};\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(CreatePost));"]},"metadata":{},"sourceType":"module"}