{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { SHOW_MODAL, HAS_PREV_URL, POSTLIKES, POSTUNLIKE, POST_DATA } from 'action/generalAction';\nvar initialState = {\n  modalData: {},\n  hasPrevUrl: false,\n  postLikes: [],\n  postData: []\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SHOW_MODAL:\n      return _objectSpread({}, state, {\n        modalData: action.payload\n      });\n\n    case HAS_PREV_URL:\n      return _objectSpread({}, state, {\n        hasPrevUrl: action.payload\n      });\n\n    case POSTLIKES:\n      return _objectSpread({}, state, {\n        postLikes: action.payload\n      });\n\n    case POSTUNLIKE:\n      return _objectSpread({}, state, {\n        postLikes: action.payload\n      });\n\n    case POST_DATA:\n      return _objectSpread({}, state, {\n        postData: action.payload\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["F:/beliefchallenge/beliefchallenge_client/redux/reducer/generalReducer.js"],"names":["SHOW_MODAL","HAS_PREV_URL","POSTLIKES","POSTUNLIKE","POST_DATA","initialState","modalData","hasPrevUrl","postLikes","postData","state","action","type","payload"],"mappings":";;;;;;;;;;;;AAAA,SAASA,UAAT,EAAqBC,YAArB,EAAmCC,SAAnC,EAA8CC,UAA9C,EAA0DC,SAA1D,QAA2E,sBAA3E;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,SAAS,EAAE,EADM;AAEjBC,EAAAA,UAAU,EAAE,KAFK;AAGjBC,EAAAA,SAAS,EAAE,EAHM;AAIjBC,EAAAA,QAAQ,EAAE;AAJO,CAArB;AAOA,gBAAe,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBL,YAAyB;AAAA,MAAXM,MAAW;;AAC7C,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAKZ,UAAL;AACI,+BACOU,KADP;AAEIJ,QAAAA,SAAS,EAAEK,MAAM,CAACE;AAFtB;;AAIJ,SAAKZ,YAAL;AACI,+BACOS,KADP;AAEIH,QAAAA,UAAU,EAAEI,MAAM,CAACE;AAFvB;;AAIJ,SAAKX,SAAL;AACI,+BACOQ,KADP;AAEIF,QAAAA,SAAS,EAAEG,MAAM,CAACE;AAFtB;;AAIJ,SAAKV,UAAL;AACI,+BACOO,KADP;AAEIF,QAAAA,SAAS,EAAEG,MAAM,CAACE;AAFtB;;AAIJ,SAAKT,SAAL;AACI,+BACOM,KADP;AAEID,QAAAA,QAAQ,EAAEE,MAAM,CAACE;AAFrB;;AAIJ;AACI,aAAOH,KAAP;AA5BR;AA8BH,CA/BD","sourcesContent":["import { SHOW_MODAL, HAS_PREV_URL, POSTLIKES, POSTUNLIKE, POST_DATA } from 'action/generalAction'\r\n\r\nconst initialState = {\r\n    modalData: {},\r\n    hasPrevUrl: false,\r\n    postLikes: [],\r\n    postData: []\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case SHOW_MODAL:\r\n            return {\r\n                ...state,\r\n                modalData: action.payload\r\n            }\r\n        case HAS_PREV_URL:\r\n            return {\r\n                ...state,\r\n                hasPrevUrl: action.payload\r\n            }\r\n        case POSTLIKES:\r\n            return {\r\n                ...state,\r\n                postLikes: action.payload\r\n            }\r\n        case POSTUNLIKE:\r\n            return {\r\n                ...state,\r\n                postLikes: action.payload\r\n            }\r\n        case POST_DATA:\r\n            return {\r\n                ...state,\r\n                postData: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}