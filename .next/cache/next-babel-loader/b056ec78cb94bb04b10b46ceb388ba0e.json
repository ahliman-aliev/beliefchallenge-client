{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport axiosinstance from 'common/config.axios';\n\nvar fetchApi_withoutparams = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(url) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return axiosinstance.get(url, null).then(function (res) {\n              return res;\n            })[\"catch\"](function (error) {\n              return error.response;\n            });\n\n          case 2:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function fetchApi_withoutparams(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar fetchApi_withparams = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(url, queryData) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return axiosinstance.get(url, queryData).then(function (res) {\n              return res;\n            })[\"catch\"](function (error) {\n              return error.response;\n            });\n\n          case 2:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function fetchApi_withparams(_x2, _x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar postApi = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(url, data) {\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return axiosinstance.post(url, data).then(function (res) {\n              return res;\n            })[\"catch\"](function (error) {\n              return error.response;\n            });\n\n          case 2:\n            return _context3.abrupt(\"return\", _context3.sent);\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function postApi(_x4, _x5) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nvar deleteApi = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(url, data) {\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return axiosinstance[\"delete\"](url, {\n              data: data\n            }).then(function (res) {\n              return res;\n            })[\"catch\"](function (error) {\n              return error.response;\n            });\n\n          case 2:\n            return _context4.abrupt(\"return\", _context4.sent);\n\n          case 3:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function deleteApi(_x6, _x7) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nvar updateApi = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(url, data) {\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return axiosinstance.put(url, data).then(function (res) {\n              return res;\n            })[\"catch\"](function (error) {\n              return error.response;\n            });\n\n          case 2:\n            return _context5.abrupt(\"return\", _context5.sent);\n\n          case 3:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function updateApi(_x8, _x9) {\n    return _ref5.apply(this, arguments);\n  };\n}();\n\nexport default {\n  _fetchWithOutParams: fetchApi_withoutparams,\n  _fetchWithParams: fetchApi_withparams,\n  _postRequest: postApi,\n  _deleteRequest: deleteApi,\n  _updateRequest: updateApi\n};","map":{"version":3,"sources":["F:/beliefchallenge/beliefchallenge_client/utilfunction/util-api-service.js"],"names":["axiosinstance","fetchApi_withoutparams","url","get","then","res","error","response","fetchApi_withparams","queryData","postApi","data","post","deleteApi","updateApi","put","_fetchWithOutParams","_fetchWithParams","_postRequest","_deleteRequest","_updateRequest"],"mappings":";;AAAA,OAAOA,aAAP,MAA2B,qBAA3B;;AAEA,IAAMC,sBAAsB;AAAA,sEAAG,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEdF,aAAa,CACrBG,GADQ,CACJD,GADI,EACA,IADA,EAERE,IAFQ,CAEH,UAAAC,GAAG,EAAI;AACT,qBAAOA,GAAP;AACH,aAJQ,WAKF,UAACC,KAAD,EAAW;AACd,qBAAOA,KAAK,CAACC,QAAb;AACH,aAPQ,CAFc;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAtBN,sBAAsB;AAAA;AAAA;AAAA,GAA5B;;AAaA,IAAMO,mBAAmB;AAAA,uEAAG,kBAAON,GAAP,EAAYO,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEXT,aAAa,CACrBG,GADQ,CACJD,GADI,EACCO,SADD,EAERL,IAFQ,CAEH,UAAAC,GAAG,EAAI;AACT,qBAAOA,GAAP;AACH,aAJQ,WAKF,UAACC,KAAD,EAAW;AACd,qBAAOA,KAAK,CAACC,QAAb;AACH,aAPQ,CAFW;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAnBC,mBAAmB;AAAA;AAAA;AAAA,GAAzB;;AAYA,IAAME,OAAO;AAAA,uEAAG,kBAAOR,GAAP,EAAYS,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAECX,aAAa,CACrBY,IADQ,CACHV,GADG,EACES,IADF,EAERP,IAFQ,CAEH,UAAAC,GAAG,EAAI;AACT,qBAAOA,GAAP;AACH,aAJQ,WAKF,UAACC,KAAD,EAAW;AACd,qBAAOA,KAAK,CAACC,QAAb;AACH,aAPQ,CAFD;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAPG,OAAO;AAAA;AAAA;AAAA,GAAb;;AAaA,IAAMG,SAAS;AAAA,uEAAG,kBAAOX,GAAP,EAAYS,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACDX,aAAa,UAAb,CACDE,GADC,EACI;AAACS,cAAAA,IAAI,EAAJA;AAAD,aADJ,EAERP,IAFQ,CAEH,UAAAC,GAAG,EAAI;AACT,qBAAOA,GAAP;AACH,aAJQ,WAKF,UAACC,KAAD,EAAW;AACd,qBAAOA,KAAK,CAACC,QAAb;AACH,aAPQ,CADC;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAATM,SAAS;AAAA;AAAA;AAAA,GAAf;;AAWA,IAAMC,SAAS;AAAA,uEAAG,kBAAOZ,GAAP,EAAYS,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACDX,aAAa,CACrBe,GADQ,CACJb,GADI,EACCS,IADD,EAERP,IAFQ,CAEH,UAAAC,GAAG,EAAI;AACT,qBAAOA,GAAP;AACH,aAJQ,WAKF,UAACC,KAAD,EAAW;AACd,qBAAOA,KAAK,CAACC,QAAb;AACH,aAPQ,CADC;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAATO,SAAS;AAAA;AAAA;AAAA,GAAf;;AAWA,eAAe;AACXE,EAAAA,mBAAmB,EAAEf,sBADV;AAEXgB,EAAAA,gBAAgB,EAAET,mBAFP;AAGXU,EAAAA,YAAY,EAAER,OAHH;AAIXS,EAAAA,cAAc,EAAEN,SAJL;AAKXO,EAAAA,cAAc,EAAEN;AALL,CAAf","sourcesContent":["import axiosinstance  from 'common/config.axios'\r\n\r\nconst fetchApi_withoutparams = async (url) => {\r\n    \r\n    return await axiosinstance\r\n        .get(url,null)\r\n        .then(res => {\r\n            return res\r\n        })\r\n        .catch((error) => {\r\n            return error.response\r\n        })\r\n}\r\n\r\n\r\nconst fetchApi_withparams = async (url, queryData) => {\r\n    \r\n    return await axiosinstance\r\n        .get(url, queryData)\r\n        .then(res => {\r\n            return res\r\n        })\r\n        .catch((error) => {\r\n            return error.response\r\n        })\r\n}\r\n\r\nconst postApi = async (url, data) => {\r\n\r\n    return await axiosinstance\r\n        .post(url, data)\r\n        .then(res => {\r\n            return res\r\n        })\r\n        .catch((error) => {\r\n            return error.response\r\n        })\r\n}\r\n\r\n\r\nconst deleteApi = async (url, data) => {\r\n    return await axiosinstance\r\n        .delete(url, {data})\r\n        .then(res => {\r\n            return res\r\n        })\r\n        .catch((error) => {\r\n            return error.response\r\n        })\r\n}\r\n\r\nconst updateApi = async (url, data) => {\r\n    return await axiosinstance\r\n        .put(url, data)\r\n        .then(res => {\r\n            return res\r\n        })\r\n        .catch((error) => {\r\n            return error.response\r\n        })\r\n}\r\n\r\nexport default {\r\n    _fetchWithOutParams: fetchApi_withoutparams,\r\n    _fetchWithParams: fetchApi_withparams,\r\n    _postRequest: postApi,\r\n    _deleteRequest: deleteApi,\r\n    _updateRequest: updateApi,\r\n\r\n}"]},"metadata":{},"sourceType":"module"}